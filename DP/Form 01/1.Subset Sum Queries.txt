Problem Statement

You are given an array of integers and multiple queries. 
For each query, you need to determine the indices of the elements in the array whose subset sums up to the queried sum. 
If such a subset exists, return the indices of the elements forming this subset; otherwise, return `-1`.

Input Format

- The function `subset_queries(vector<int> &arr, vector<int> &queries)` takes two arguments:
  1. A vector `arr` of size `N` representing the array of integers.
  2. A vector `queries` of size `Q` where each element represents a sum that needs to be checked.

Output Format

- The function should return a vector of vectors of integers. 
Each inner vector corresponds to the indices (0-based) of elements in `arr` that form the subset sum equal to the queried sum for each query.
- If a subset for a particular query sum does not exist, return a vector containing `-1` for that query.

Constraints

1 < N < 100 — the size of the array `arr`.
1 < Q < 10^5 — the number of queries.
1 < arr[i] < 10^5 — the values of the elements in the array.
1 < sum_i < 10^5 — the value of the sum for each query.

Sample Input
5 3
1 2 3 4 5
7 16 3


Sample Output
1
-1
1